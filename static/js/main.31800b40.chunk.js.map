{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","classChecker","good","includes","listOfGoodsWritter","length","join","slice","selectedGoodChanger","checkedGoods","index","indexOf","splice","setState","push","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,aAAe,SAACC,GACd,OAAO,EAAKH,MAAMC,cAAcG,SAASD,I,EAG3CE,mBAAqB,WACnB,IAAQJ,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcK,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUL,EAAc,GAAxB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAcM,KAAK,SAA7B,iBACF,KAAK,GACH,MAAO,yBACT,QACE,MAAO,UAAGN,EAAcO,MAAM,GAAI,GAAGD,KAAK,MAAnC,mBACFN,EAAcA,EAAcK,OAAS,GADnC,mB,EAKbG,oBAAsB,SAACN,GACrB,IAAMO,EAAY,YAAO,EAAKV,MAAMC,eAEpC,GAAIS,EAAaN,SAASD,GAAO,CAC/B,IAAMQ,EAAQD,EAAaE,QAAQT,GAEnCO,EAAaG,OAAOF,EAAO,GAC3B,EAAKG,SAAS,CAAEb,cAAeS,SAE/BA,EAAaK,KAAKZ,GAClB,EAAKW,SAAS,CAAEb,cAAeS,K,4CAInC,WAAU,IAAD,OACCT,EAAkBe,KAAKhB,MAAvBC,cAER,OACE,qBAAKgB,UAAU,MAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAIA,UAAU,2EAAd,UAGGD,KAAKX,qBACqB,IAAzBJ,EAAcK,QAEd,wBACEY,KAAK,SACLD,UAAU,mBACVE,QAAS,WACP,EAAKL,SAAS,CAAEb,cAAe,MAJnC,sBAYJ,6BACGH,EAAgBsB,KAAI,SAAAjB,GAAI,OACvB,qBAEEc,UAAU,gBAFZ,SAIE,qBAAIA,UAAU,2CAAd,UACE,oBAAIA,UAAWI,IACb,QACA,CACE,sBAAuB,EAAKnB,aAAaC,GACzC,sBAAuB,EAAKD,aAAaC,KAJ7C,SAQGA,IAGH,wBACEe,KAAK,SACLD,UAAWI,IACT,SACA,CACE,YAAa,EAAKnB,aAAaC,GAC/B,cAAe,EAAKD,aAAaC,KAGrCgB,QAAS,kBAAM,EAAKV,oBAAoBN,IAT1C,SAWGF,EAAcG,SAASD,GAAQ,SAAW,eA1B1CA,iB,GApEHmB,IAAMC,WA4GTxB,I,MC7HfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.31800b40.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  classChecker = (good: string) => {\n    return this.state.selectedGoods.includes(good);\n  };\n\n  listOfGoodsWritter = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      case 2:\n        return `${selectedGoods.join(' and ')} are selected`;\n      case 10:\n        return 'All goods are selected';\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and `\n        + `${selectedGoods[selectedGoods.length - 1]} are selected`;\n    }\n  };\n\n  selectedGoodChanger = (good: string) => {\n    const checkedGoods = [...this.state.selectedGoods];\n\n    if (checkedGoods.includes(good)) {\n      const index = checkedGoods.indexOf(good);\n\n      checkedGoods.splice(index, 1);\n      this.setState({ selectedGoods: checkedGoods });\n    } else {\n      checkedGoods.push(good);\n      this.setState({ selectedGoods: checkedGoods });\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"list box card\">\n          <h1 className=\"notification is-info title is-5\n          is-flex is-justify-content-space-between\"\n          >\n            {this.listOfGoodsWritter()}\n            {(selectedGoods.length !== 0)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger\"\n                onClick={() => {\n                  this.setState({ selectedGoods: [] });\n                }}\n              >\n                Clear\n              </button>\n            )}\n\n          </h1>\n          <ul>\n            {goodsFromServer.map(good => (\n              <div\n                key={good}\n                className=\"item box mb-1\"\n              >\n                <li className=\"is-flex is-justify-content-space-between\">\n                  <h3 className={classNames(\n                    'title',\n                    {\n                      'is-3 has-text-black': this.classChecker(good),\n                      'is-4 has-text-grey': !this.classChecker(good),\n                    },\n                  )}\n                  >\n                    {good}\n                  </h3>\n\n                  <button\n                    type=\"button\"\n                    className={classNames(\n                      'button',\n                      {\n                        'is-danger': this.classChecker(good),\n                        'is-success': !this.classChecker(good),\n                      },\n                    )}\n                    onClick={() => this.selectedGoodChanger(good)}\n                  >\n                    {selectedGoods.includes(good) ? 'remove' : 'select'}\n                  </button>\n\n                </li>\n              </div>\n            ))}\n          </ul>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}